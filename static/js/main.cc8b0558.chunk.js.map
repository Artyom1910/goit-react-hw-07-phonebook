{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/Filter/Filter.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactList/ContactList.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","error","contacts","combineReducers","store","configureStore","reducer","devTools","process","getAllContacts","getFilter","getVisibleContact","createSelector","normalizedFilter","toLowerCase","contact","name","includes","axios","defaults","baseURL","ContactForm","number","nameId","shortid","generate","numberId","findName","props","normalizedName","find","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","onSubmit","alert","resetForm","this","className","styles","Form","autoComplete","htmlFor","type","pattern","title","required","placeholder","onChange","button","Component","connect","dispatch","a","post","data","console","addContact","Filter","filterId","defaultProps","evt","ContactItem","onDeleteItem","onClick","ContactList","fetchContacts","onDeleteContact","map","contactId","delete","deleteContact","get","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc8b0558.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__1_EtS\",\"button\":\"ContactForm_button__32Flz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__2wMqO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__1eCuA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2MnMe\"};","  \r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contacts = combineReducers({\r\n  items,\r\n  filter,\r\n  error,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport { contacts } from './contacts/contacts-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getAllContacts = state => state.contacts.items;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContact = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(console.error('ERROR')));\r\n  }\r\n};\r\n\r\nexport const addContact = ({ name, number }) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(console.error('ERROR')));\r\n  }\r\n};\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(console.error('ERROR')));\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport { addContact, getAllContacts } from '../../redux/contacts/';\r\nimport styles from './ContactForm.module.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: '', number: '' };\r\n\r\n  nameId = shortid.generate();\r\n  numberId = shortid.generate();\r\n\r\n    findName = name => {\r\n    const { contacts } = this.props;\r\n    const normalizedName = name.toLowerCase();\r\n    return contacts.find(\r\n      contact => contact.name.toLowerCase() === normalizedName,\r\n    );\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name } = this.state;\r\n    const { onSubmit } = this.props;\r\n    const checkName = this.findName(name);\r\n\r\n    if (checkName) {\r\n      alert(`${name} is already in contacts`);\r\n      this.resetForm();\r\n      return;\r\n    }\r\n\r\n    onSubmit(this.state);\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form\r\n        className={styles.Form}\r\n        onSubmit={this.handleSubmit}\r\n        autoComplete=\"off\"\r\n      >\r\n        <label htmlFor={this.nameId}>\r\n          Name{' '}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          placeholder=\"Type name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n          id={this.nameId}\r\n        />\r\n\r\n        <label htmlFor={this.numberId}>\r\n          Number{' '}\r\n        </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          placeholder=\"Type number\"\r\n          id={this.numberId}\r\n          value={number}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n  contacts: getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport shortid from 'shortid';\r\nimport { changeFilter, getFilter } from '../../redux/contacts';\r\nimport styles from './Filter.module.scss';\r\n\r\nclass Filter extends Component {\r\n  filterId = shortid.generate();\r\n  render() {\r\n    const { filter, onChange } = this.props;\r\n\r\n    return (\r\n      <div className={styles.Filter}>\r\n        <label htmlFor={this.filterId}>\r\n          Find contacts by name{' '}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          id={this.filterId}\r\n          onChange={onChange}\r\n          placeholder=\"Type name contact\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.defaultProps = {\r\n  filter: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: evt => dispatch(changeFilter(evt.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactItem.module.scss';\r\n\r\nclass ContactItem extends Component {\r\n  render() {\r\n    const { name, number, onDeleteItem, id } = this.props;\r\n    const handleDelete = () => onDeleteItem(id);\r\n\r\n    return (\r\n      <li className={styles.ContactItem}>\r\n        <span>\r\n          {name}: {number}\r\n        </span>\r\n        <button\r\n          onClick={handleDelete}\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteItem: PropTypes.func.isRequired,\r\n};\r\nexport default ContactItem;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  getVisibleContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n} from '../../redux/contacts';\r\nimport ContactItem from '../ContactItem';\r\nimport styles from './ContactList.module.scss';\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts, onDeleteContact } = this.props;\r\n\r\n    return (\r\n      <ul className={styles.ContactList}>\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <ContactItem\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              onDeleteItem={onDeleteContact}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: getVisibleContact(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: contactId => dispatch(deleteContact(contactId)),\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst App = () => (\n  <div className=\"Container\">\n    <h1>Phonebook</h1>\n    <ContactForm />\n    <div className=\"Contacts\">\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}